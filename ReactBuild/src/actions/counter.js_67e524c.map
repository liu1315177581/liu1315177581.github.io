{"version":3,"sources":["/src/actions/counter.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;oBAKwB,MAAM;;sBACJ,UAAU;;4BACR,gBAAgB;;uBACrB,WAAW;;AAE3B,SAAS,SAAS,GAAE;AACvB,WAAO,UAAC,QAAQ,EAAC,QAAQ,EAAG;AACxB,gBAAQ,CAAC;AACL,gBAAI,EAAC,0BAAY,WAAW;SAC/B,CAAC;KACL;CACJ;;AAEM,SAAS,aAAa,GAAE;AAC3B,WAAO,UAAC,QAAQ,EAAC,QAAQ,EAAG;AACxB,gBAAQ,CAAC;AACL,gBAAI,EAAC,0BAAY,gBAAgB;SACpC,CAAC;KACL;CACJ;;AAEM,SAAS,gBAAgB,GAAE;AAC9B,WAAO,UAAC,QAAQ,EAAC,QAAQ,EAAG;AACxB,kBAAU,CAAC,YAAI;AACX,oBAAQ,CAAC;AACL,oBAAI,EAAC,0BAAY,kBAAkB;AACnC,uBAAO,EAAC,qBAAO,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,uBAAuB,CAAC;aAC7D,CAAC,CAAC;AACH,oBAAQ,CAAC,gBAAgB,EAAE,CAAC;SAC/B,EAAC,IAAI,CAAC;KACV;CACJ;;;;AAGM,SAAS,2BAA2B,CAAC,KAAK,EAAE;AAC/C,WAAO,UAAC,QAAQ,EAAE,QAAQ,EAAK;AAC3B,sBAAM,GAAG,CAAC,YAAI,EAAE,EAAE,KAAK,CAAC,CAClB,IAAI,CAAC,aAAG,EAAI;;SAEZ,CAAC,SACI,CAAC,aAAG,EAAI;AACV,0BAAQ,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;SACtD,CAAC,CAAC;KACX;CACJ;;;;AAGM,SAAS,4BAA4B,CAAC,KAAK,EAAE;AAChD,WAAO,UAAC,QAAQ,EAAE,QAAQ,EAAK;AAC3B,sBAAM,IAAI,CAAC,YAAI,EAAE,EAAE,KAAK,CAAC,CACnB,IAAI,CAAC,aAAG,EAAI;AACT,mBAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACpB,CAAC,SACI,CAAC,aAAG,EAAI;AACV,0BAAQ,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,KAAK,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;SACtD,CAAC,CAAC;KACX;CACJ","file":"/src/actions/counter.es6","sourcesContent":["/**\r\n * @module counter\r\n * @author 小虎牙\r\n */\r\n\r\nimport { message } from 'antd'\r\nimport { fetch,API } from '/src/api'\r\nimport { actionTypes } from '/src/constants'\r\nimport { moment } from '/src/util'\r\n\r\nexport function addAction(){\r\n    return (dispatch,getState)=>{\r\n        dispatch({\r\n            type:actionTypes.COUNTER_ADD\r\n        })\r\n    }\r\n}\r\n\r\nexport function subtractAcion(){\r\n    return (dispatch,getState)=>{\r\n        dispatch({\r\n            type:actionTypes.COUNTER_SUBTRACT\r\n        })\r\n    }\r\n}\r\n\r\nexport function updateTimeAction(){\r\n    return (dispatch,getState)=>{\r\n        setTimeout(()=>{\r\n            dispatch({\r\n                type:actionTypes.COUNTER_UPDATETIME,\r\n                payload:moment(Date.now()).format('YYYY-MM-DD hh:mm:ss a')\r\n            });\r\n            dispatch(updateTimeAction())\r\n        },1000)\r\n    }\r\n}\r\n\r\n// Get\r\nexport function fetchInterfaceTestActionGet(param) {\r\n    return (dispatch, getState) => {\r\n        fetch.get(API.T1, param)\r\n             .then(res => {\r\n                //  console.log(res);\r\n             })\r\n             .catch(exc => {\r\n                 message.error(exc.status + ' > ' + exc.statusText);\r\n             });\r\n    }\r\n}\r\n\r\n// Post\r\nexport function fetchInterfaceTestActionPost(param) {\r\n    return (dispatch, getState) => {\r\n        fetch.post(API.T2, param)\r\n             .then(res => {\r\n                 console.log(res);\r\n             })\r\n             .catch(exc => {\r\n                 message.error(exc.status + ' > ' + exc.statusText);\r\n             });\r\n    }\r\n}"]}